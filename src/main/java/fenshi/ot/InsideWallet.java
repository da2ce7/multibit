/*
 * The MIT License
 *
 * Copyright 2012 shinitei.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package fenshi.ot;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.multibit.controller.MultiBitController;

/**
 *
 * @author shinitei
 */
public class InsideWallet extends javax.swing.JFrame {

    protected MultiBitController controller;
    protected LocalWallet LW;
    /**
     * Creates new form InsideWallet
     */
    public InsideWallet(LocalWallet LW, MultiBitController C) {
        initComponents();
        controller = C;
        jLabel1.setText(controller.getLocaliser().getString("InsideWallet.serversLabel"));
        jLabel2.setText(controller.getLocaliser().getString("InsideWallet.nymsLabel"));
        jLabel3.setText(controller.getLocaliser().getString("InsideWallet.assetsLabel"));
        jButton1.setText(controller.getLocaliser().getString("OT.recieveButton"));
        jButton2.setText(controller.getLocaliser().getString("OT.sendButton"));
        
        DefaultTableModel defaultTableModel = new DefaultTableModel(
                                                      new Object[][]{
                                                          {"BhD1", "zQ584ZWBqqx5CReL7eW4T8jfV7TwtbkuqG"},
                                                          {"BhD2", "ToRq17gmCdQWfenShiX46oRG35cNqrIPgB"},
                                                          {"BhD3", "UmbPn68On8Gk18bi9qVTHWF2QHcB2qVZMT"},
                                                          {"BhD4", "M6xeONp6FAqFMBLQs7MtwEe48FG8X2LWrm"}
                                                      },
                                                      new String[]{
                                                          controller.getLocaliser().getString("InsideWallet.tablecolumn1Title"),
                                                          controller.getLocaliser().getString("InsideWallet.tablecolumn2Title")
                                                      });
        jTable1.setModel(defaultTableModel);
        jTable2.setModel(defaultTableModel);
        jTable3.setModel(defaultTableModel);
        
        this.LW = LW;
        List<Server> servers = LW.getServers();
        for(int i=0; i<servers.size(); i++){
            ((DefaultTableModel)jTable1.getModel()).addRow(new Object[]{servers.get(i).ID, servers.get(i)});
        }
        
        List<Nym> nyms = LW.getNyms();
        for(int i=0; i<nyms.size(); i++){
            ((DefaultTableModel)jTable2.getModel()).addRow(new Object[]{nyms.get(i).ID, nyms.get(i)});
        }
        
        List<Asset> assets = LW.getAssets();
        for(int i=0; i<assets.size(); i++){
            ((DefaultTableModel)jTable3.getModel()).addRow(new Object[]{assets.get(i).ID, assets.get(i)});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new String[][]{{"hd6eijsn239opcd8","Puta"}},
            new String [] {
                "ID", "Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Servers");

        jLabel2.setText("Nyms");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new String[][]{{"plks36dnhcbdg3","Stefan"}},
            new String [] {
                "ID", "Name"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setText("Assets");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new String[][]{{"oir90pdbsn213hd","MyAsset"}},
            new String [] {
                "ID", "Name"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jButton1.setText("Receive");

        jButton2.setText("Send");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(6, 6, 6))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
